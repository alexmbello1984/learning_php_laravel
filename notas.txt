OBJETO RESPONSE Y VIEW

Cada objeto tiene una responsabilidad unica

Response es un concepto que representa una HTTP o XML o TXT, word, excel, json, etc

Representa la respuesta que se le envia al usuario.

Todas las respuestas deberian tener un metodo ejecutar()

Aqui estamos definiendo es un contrato para enviarle la respuesta concreta al usuario

Creamos una clase View que es un tip√≥ de Respuesta HTML 

El constructor crea un objeto pero no lo ejecuta

public function execute()
	{
		extract( $vars );
		require "views/$template.tpl.php";
	}

hay que cambiarlo porque al hacer el require le daria acceso a los elementos de la clase View en la vista, necesitamos que sea solo lo que le queremos enviar.

asi, ya que al encapsular ya no tendria acceso a las variables de view.

Ejemplo de interfaces
permiten que la visa sea sencilla

ejemplo cuando aprendes a conducir un carro mecanico aprendes a conducir en todos los carros que tengan la misma interfaces
interface volante, interfaz acelerador, 

por eso no tenemos que reaprender a conducir cada vez que cambiamos de carro, porque todos tienen las mismas interfaces.


Retornamos la vista al request para que el se encargue de ejecutar la respuesta.

Es posible que necesitemos que la respuesta no sea HTML se agrega el caso, esto es util cuando tenemos que retornar strings, JSON array, etc
Aunque esto deberia ser mas con tipos de Response JsonResponse, StringResponse, etc

Este metodo ya tiene demasiadas lineas de codigo

